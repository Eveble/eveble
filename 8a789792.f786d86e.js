(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{320:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return s})),t.d(a,"metadata",(function(){return l})),t.d(a,"rightToc",(function(){return c})),t.d(a,"default",(function(){return i}));var n=t(2),b=t(9),r=(t(0),t(465)),s={id:"handlingmixin",title:"HandlingMixin",sidebar_label:"HandlingMixin"},l={id:"api/classes/handlingmixin",title:"HandlingMixin",description:"Hierarchy",source:"@site/docs/api/classes/handlingmixin.md",permalink:"/eveble/docs/api/classes/handlingmixin",sidebar_label:"HandlingMixin",sidebar:"api",previous:{title:"HandlingError",permalink:"/eveble/docs/api/classes/handlingerror"},next:{title:"History",permalink:"/eveble/docs/api/classes/history"}},c=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Index",id:"index",children:[{value:"Constructors",id:"constructors",children:[]},{value:"Methods",id:"methods",children:[]}]},{value:"Constructors",id:"constructors-1",children:[{value:"constructor",id:"constructor",children:[]}]},{value:"Methods",id:"methods-1",children:[{value:"ensureHandleability",id:"ensurehandleability",children:[]},{value:"getHandleableTypes",id:"gethandleabletypes",children:[]},{value:"getHandled",id:"gethandled",children:[]},{value:"getHandledCommands",id:"gethandledcommands",children:[]},{value:"getHandledEvents",id:"gethandledevents",children:[]},{value:"getHandledMessages",id:"gethandledmessages",children:[]},{value:"getHandledTypes",id:"gethandledtypes",children:[]},{value:"getHandledTypesNames",id:"gethandledtypesnames",children:[]},{value:"getHandlers",id:"gethandlers",children:[]},{value:"handles",id:"handles",children:[]},{value:"hasHandler",id:"hashandler",children:[]},{value:"isHandleabe",id:"ishandleabe",children:[]},{value:"overrideHandler",id:"overridehandler",children:[]},{value:"registerHandler",id:"registerhandler",children:[]},{value:"removeHandler",id:"removehandler",children:[]},{value:"setHandleableTypes",id:"sethandleabletypes",children:[]},{value:"subscribes",id:"subscribes",children:[]}]}],p={rightToc:c};function i(e){var a=e.components,t=Object(b.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},p,t,{components:a,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"HandlingMixin")),Object(r.b)("p",{parentName:"li"},"\u21b3 ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/classes/onetoonehandlingmixin"}),"OneToOneHandlingMixin")),Object(r.b)("p",{parentName:"li"},"\u21b3 ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/classes/onetomanyhandlingmixin"}),"OneToManyHandlingMixin")))),Object(r.b)("h2",{id:"index"},"Index"),Object(r.b)("h3",{id:"constructors"},"Constructors"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#constructor"}),"constructor"))),Object(r.b)("h3",{id:"methods"},"Methods"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#ensurehandleability"}),"ensureHandleability")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#gethandleabletypes"}),"getHandleableTypes")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#gethandled"}),"getHandled")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#gethandledcommands"}),"getHandledCommands")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#gethandledevents"}),"getHandledEvents")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#gethandledmessages"}),"getHandledMessages")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#gethandledtypes"}),"getHandledTypes")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#gethandledtypesnames"}),"getHandledTypesNames")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#gethandlers"}),"getHandlers")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#handles"}),"handles")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#hashandler"}),"hasHandler")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#ishandleabe"}),"isHandleabe")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#overridehandler"}),"overrideHandler")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#registerhandler"}),"registerHandler")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#removehandler"}),"removeHandler")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#sethandleabletypes"}),"setHandleableTypes")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/handlingmixin#subscribes"}),"subscribes"))),Object(r.b)("h2",{id:"constructors-1"},"Constructors"),Object(r.b)("h3",{id:"constructor"},"constructor"),Object(r.b)("p",null,"+"," ",Object(r.b)("strong",{parentName:"p"},"new HandlingMixin"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/classes/handlingmixin"}),"HandlingMixin"))),Object(r.b)("p",null,"Creates an instance of HandlingMixin.\nCreates an instance of HandlingMixin."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/classes/handlingmixin"}),"HandlingMixin"))),Object(r.b)("h2",{id:"methods-1"},"Methods"),Object(r.b)("h3",{id:"ensurehandleability"},"ensureHandleability"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"ensureHandleability"),"(",Object(r.b)("inlineCode",{parentName:"p"},"messageType"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a, ",Object(r.b)("inlineCode",{parentName:"p"},"handleableTypes?"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a | ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a[]): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Ensures that provided type can be handled by verifying it against handleable types."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"throws"))," {UnhandleableTypeError}\nThrown if message type is not one of handleable types."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"messageType")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type implementing ",Object(r.b)("inlineCode",{parentName:"td"},"MessageableType")," interface.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"handleableTypes?")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a[]"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Optional handleable types to be verified against on runtime.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns true if ",Object(r.b)("inlineCode",{parentName:"p"},"type")," is handleable, else ",Object(r.b)("inlineCode",{parentName:"p"},"false"),"."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gethandleabletypes"},"getHandleableTypes"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getHandleableTypes"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a[]")),Object(r.b)("p",null,"Returns handleable message types."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a[]")),Object(r.b)("p",null,"Returns handleable message types as a list with message types."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gethandled"},"getHandled"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getHandled"),"(",Object(r.b)("inlineCode",{parentName:"p"},"messageType"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a[]")),Object(r.b)("p",null,"Returns all message types that matches evaluated one by equal constructor or subclassing."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"messageType")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type implementing ",Object(r.b)("inlineCode",{parentName:"td"},"MessageableType")," interface.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a[]")),Object(r.b)("p",null,"List of all handled types matching evaluated one."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gethandledcommands"},"getHandledCommands"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getHandledCommands"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.command"}),"Command"),"\u203a[]")),Object(r.b)("p",null,"Returns all commands that can be handled."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.command"}),"Command"),"\u203a[]")),Object(r.b)("p",null,"List of all handled types matching ",Object(r.b)("inlineCode",{parentName:"p"},"Command"),"."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gethandledevents"},"getHandledEvents"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getHandledEvents"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.event"}),"Event"),"\u203a[]")),Object(r.b)("p",null,"Returns all commands that can be handled."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.event"}),"Event"),"\u203a[]")),Object(r.b)("p",null,"List of all handled types matching ",Object(r.b)("inlineCode",{parentName:"p"},"Event"),"."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gethandledmessages"},"getHandledMessages"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getHandledMessages"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a[]")),Object(r.b)("p",null,"Returns all messages that can be handled."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a[]")),Object(r.b)("p",null,"List of all handled types matching ",Object(r.b)("inlineCode",{parentName:"p"},"Message"),"."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gethandledtypes"},"getHandledTypes"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getHandledTypes"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a[]")),Object(r.b)("p",null,"Returns all handled message types."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a[]")),Object(r.b)("p",null,"List of all handled message types."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gethandledtypesnames"},"getHandledTypesNames"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getHandledTypesNames"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName"),"[]")),Object(r.b)("p",null,"Returns all type names that can be handled."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName"),"[]")),Object(r.b)("p",null,"List of all handled type names"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gethandlers"},"getHandlers"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getHandlers"),"(): ",Object(r.b)("em",{parentName:"p"},"Map\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a, ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#handler"}),"Handler")," | ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#handler"}),"Handler"),"[]\u203a")),Object(r.b)("p",null,"Returns all available handler mappings."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Map\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a, ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#handler"}),"Handler")," | ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#handler"}),"Handler"),"[]\u203a")),Object(r.b)("p",null,"Returns mappings of all available handlers by message type: handler(s) relation."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"handles"},"handles"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"handles"),"(): ",Object(r.b)("em",{parentName:"p"},"Map\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.command"}),"Command"),"\u203a, ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#handler"}),"Handler"),"\u203a")),Object(r.b)("p",null,"Returns all handled ",Object(r.b)("inlineCode",{parentName:"p"},"Command")," mappings."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"class MyController extends HandlingMixin {\n  initialize(): void {\n    this.setupHandlers({\n      handlers: this.handles(),\n    });\n  }\n  // ...\n  MyCommandHandlerMethod(@handle command: MyCommand): boolean {\n    return command.key === 'my-string';\n  }\n}\nconst controller = new MyController();\ncontroller.registerHandler = sinon.stub();\ncontroller.initialize();\n\nexpect(controller.registerHandler).to.be.calledOnce;\nexpect(controller.registerHandler).to.be.calledWithExactly(\n  MyCommand,\n  controller.MyCommandHandlerMethod\n);\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Map\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.command"}),"Command"),"\u203a, ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#handler"}),"Handler"),"\u203a")),Object(r.b)("p",null,"Returns all handled ",Object(r.b)("inlineCode",{parentName:"p"},"Command"),"(s) defined with ",Object(r.b)("inlineCode",{parentName:"p"},"@handle")," annotation\nor allows developer to define manually handlers."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"hashandler"},"hasHandler"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"hasHandler"),"(",Object(r.b)("inlineCode",{parentName:"p"},"messageType"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Evaluates if handler for message type is registered."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"messageType")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type implementing ",Object(r.b)("inlineCode",{parentName:"td"},"MessageableType")," interface.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns ",Object(r.b)("inlineCode",{parentName:"p"},"true")," if handler for message type is registered, else ",Object(r.b)("inlineCode",{parentName:"p"},"false"),"."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"ishandleabe"},"isHandleabe"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isHandleabe"),"(",Object(r.b)("inlineCode",{parentName:"p"},"messageType"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a, ",Object(r.b)("inlineCode",{parentName:"p"},"handleableTypes?"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a | ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a[]): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Evaluates if type can be handled."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"messageType")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type implementing ",Object(r.b)("inlineCode",{parentName:"td"},"MessageableType")," interface.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"handleableTypes?")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a[]"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Optional handleable types to be verified against on runtime.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns ",Object(r.b)("inlineCode",{parentName:"p"},"true")," if message type can be handled, else ",Object(r.b)("inlineCode",{parentName:"p"},"false"),"."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"overridehandler"},"overrideHandler"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"overrideHandler"),"(",Object(r.b)("inlineCode",{parentName:"p"},"messageType"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a, ",Object(r.b)("inlineCode",{parentName:"p"},"handler"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#handler"}),"Handler"),"): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Overrides already existing handler for message type."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"messageType")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type implementing ",Object(r.b)("inlineCode",{parentName:"td"},"MessageableType")," interface.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"handler")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#handler"}),"Handler")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Handler function that will executed upon handling message type.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"registerhandler"},"registerHandler"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"registerHandler"),"(",Object(r.b)("inlineCode",{parentName:"p"},"_messageType"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a, ",Object(r.b)("inlineCode",{parentName:"p"},"_handler"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#handler"}),"Handler"),", ",Object(r.b)("inlineCode",{parentName:"p"},"_shouldOverride?"),": boolean): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"[!]"," Placeholder for registering handler for message type."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"_messageType")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"_handler")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#handler"}),"Handler"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"_shouldOverride?")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"boolean")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"removehandler"},"removeHandler"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"removeHandler"),"(",Object(r.b)("inlineCode",{parentName:"p"},"messageType"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Removes handler by type."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"messageType")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type implementing ",Object(r.b)("inlineCode",{parentName:"td"},"MessageableType")," interface.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"sethandleabletypes"},"setHandleableTypes"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setHandleableTypes"),"(",Object(r.b)("inlineCode",{parentName:"p"},"handleableTypes"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a | ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a[]): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Sets the only allowed handleable message types."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"handleableTypes")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.message"}),"Message"),"\u203a[]"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"List of allowed types for handling.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"subscribes"},"subscribes"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"subscribes"),"(): ",Object(r.b)("em",{parentName:"p"},"Map\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.event"}),"Event"),"\u203a, ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#handler"}),"Handler"),"\u203a")),Object(r.b)("p",null,"Returns all handled ",Object(r.b)("inlineCode",{parentName:"p"},"Event")," mappings."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"class MyController extends HandlingMixin {\n  initialize(): void {\n    this.setupHandlers({\n      handlers: this.subscribes(),\n    });\n  }\n  // ...\n  MyEventHandlerMethod(@subscribe event: MyEvent): boolean {\n    return event.key === 'my-string';\n  }\n}\nconst controller = new MyController();\ncontroller.registerHandler = sinon.stub();\ncontroller.initialize();\n\nexpect(controller.registerHandler).to.be.calledOnce;\nexpect(controller.registerHandler).to.be.calledWithExactly(\n  MyEvent,\n  controller.MyEventHandlerMethod\n);\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Map\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.messagetype"}),"MessageType"),"\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.event"}),"Event"),"\u203a, ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#handler"}),"Handler"),"\u203a")),Object(r.b)("p",null,"Returns all handled ",Object(r.b)("inlineCode",{parentName:"p"},"Events"),"(s) defined with ",Object(r.b)("inlineCode",{parentName:"p"},"@subscribe")," annotation\nor allows developer to define manually handlers."))}i.isMDXComponent=!0},465:function(e,a,t){"use strict";t.d(a,"a",(function(){return d})),t.d(a,"b",(function(){return j}));var n=t(0),b=t.n(n);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function c(e,a){if(null==e)return{};var t,n,b=function(e,a){if(null==e)return{};var t,n,b={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(b[t]=e[t]);return b}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(b[t]=e[t])}return b}var p=b.a.createContext({}),i=function(e){var a=b.a.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},d=function(e){var a=i(e.components);return b.a.createElement(p.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return b.a.createElement(b.a.Fragment,{},a)}},O=b.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=i(t),O=n,j=d["".concat(s,".").concat(O)]||d[O]||m[O]||r;return t?b.a.createElement(j,l(l({ref:a},p),{},{components:t})):b.a.createElement(j,l({ref:a},p))}));function j(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var r=t.length,s=new Array(r);s[0]=O;var l={};for(var c in a)hasOwnProperty.call(a,c)&&(l[c]=a[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var p=2;p<r;p++)s[p]=t[p];return b.a.createElement.apply(null,s)}return b.a.createElement.apply(null,t)}O.displayName="MDXCreateElement"}}]);