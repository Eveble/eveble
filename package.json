{
  "name": "@eveble/eveble",
  "version": "0.2.0",
  "description": "Event sourcing framework with modular architecture for domain driven designed applications in Node.js",
  "main": "dist/index.js",
  "module": "dist/index.es.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist"
  ],
  "keywords": [
    "eveble",
    "modular",
    "architecture",
    "dependencies",
    "dependency",
    "injection",
    "di",
    "ioc",
    "inversion of control",
    "messaging",
    "api",
    "command bus",
    "cqrs",
    "eventsourcing",
    "event sourcing",
    "event source",
    "ddd",
    "dddd",
    "command",
    "event",
    "domain",
    "driven",
    "design"
  ],
  "author": "Eveble <eveble@eveble.com> (https://eveble.com)",
  "homepage": "https://eveble.com",
  "bugs": "https://github.com/eveble/eveble/issues",
  "license": "MIT",
  "engines": {
    "node": ">= 13.0.x",
    "npm": ">= 6.12.x"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/eveble/eveble.git"
  },
  "dependencies": {
    "@eveble/helpers": "0.2.1",
    "@eveble/ejson": "^2.3.0",
    "@parisholley/inversify-async": "^1.1.7",
    "chalk": "^3.0.0",
    "deepmerge": "^4.2.2",
    "decache": "^4.5.1",
    "getenv": "^1.0.0",
    "has-ansi": "^4.0.0",
    "lodash": "^4.17.15",
    "polytype": "^0.9.1",
    "reflect-metadata": "^0.1.13",
    "reflect-params": "^1.0.2",
    "tsruntime": "^3.0.0-beta.1",
    "ttypescript": "^1.5.10",
    "typend": "^0.1.0",
    "uuid": "^7.0.2",
    "winston": "^3.2.1",
    "agenda": "^3.0.0",
    "mongodb": "^3.5.4",
    "saslprep": "^1.0.3",
    "dotenv": "^8.2.0",
    "dotenv-expand": "^5.1.0",
    "dotenv-extended": "^2.7.1",
    "@jsbits/deep-clone": "^1.1.1",
    "abbreviate": "^0.0.3"
  },
  "devDependencies": {
    "@types/agenda": "^2.0.6",
    "@types/chai": "^4.2.10",
    "@types/chai-as-promised": "^7.1.2",
    "@types/getenv": "^1.0.0",
    "@types/lodash": "^4.14.149",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.9.0",
    "@types/mongodb": "^3.5.2",
    "@types/sinon": "^7.5.2",
    "@types/sinon-chai": "^3.2.3",
    "@typescript-eslint/eslint-plugin": "^2.23.0",
    "@typescript-eslint/parser": "^2.23.0",
    "babel-eslint": "10.1.0",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "delay": "^4.3.0",
    "eslint": "^6.8.0",
    "eslint-config-airbnb-base": "^14.0.0",
    "eslint-config-prettier": "^6.10.0",
    "eslint-plugin-import": "^2.20.1",
    "eslint-plugin-mocha": "^6.3.0",
    "eslint-plugin-prettier": "^3.1.2",
    "gulp": "^4.0.2",
    "gulp-connect": "^5.7.0",
    "gulp-typedoc": "^2.2.4",
    "husky": "^4.2.3",
    "lint-staged": "^10.0.8",
    "mocha": "^7.1.0",
    "prettier": "^1.19.1",
    "pretty-quick": "^2.0.1",
    "rollup": "^1.32.0",
    "rollup-plugin-commonjs": "^10.1.0",
    "rollup-plugin-filesize": "^6.2.1",
    "rollup-plugin-json": "^4.0.0",
    "rollup-plugin-node-resolve": "^5.2.0",
    "rollup-plugin-sourcemaps": "^0.5.0",
    "rollup-plugin-typescript2": "^0.26.0",
    "sinon": "^9.0.1",
    "sinon-chai": "^3.5.0",
    "ts-node": "^8.6.2",
    "ts-sinon": "^1.0.25",
    "typedoc": "^0.16.11",
    "typescript": "^3.8.3"
  },
  "scripts": {
    "clean": "rimraf dist",
    "build": "npm run clean && npm run lint && npm run build:es && npm run build:cjs",
    "build:es": "NODE_ENV=es rollup -c",
    "build:cjs": "NODE_ENV=cjs rollup -c",
    "docs:build": "rimraf docs && node_modules/.bin/gulp docs:build",
    "docs:watch": "node_modules/.bin/gulp docs:watch",
    "prepare": "npm run test && npm run lint && npm run build",
    "test": "TS_NODE_PROJECT=./test/tsconfig.json TS_NODE_COMPILER=\"ttypescript\" ./node_modules/.bin/mocha --config ./.mocharc.json --project ./test/tsconfig.json",
    "test:watch": "npm test -- --watch",
    "test:unit": "NODE_ENV=test TS_NODE_PROJECT=./test/tsconfig.json TS_NODE_COMPILER=\"ttypescript\" ./node_modules/.bin/mocha --config ./.mocharc.json ./test/unit --project ./test/tsconfig.json",
    "test:unit:watch": "NODE_ENV=test TS_NODE_PROJECT=./test/tsconfig.json TS_NODE_COMPILER=\"ttypescript\" ./node_modules/.bin/mocha --watch --config ./.mocharc.json ./test/unit --project ./test/tsconfig.json",
    "test:integration": "NODE_ENV=test TS_NODE_PROJECT=./test/tsconfig.json TS_NODE_COMPILER=\"ttypescript\" ./node_modules/.bin/mocha --config ./.mocharc.json ./test/integration --project ./test/tsconfig.json",
    "test:integration:watch": "NODE_ENV=test TS_NODE_PROJECT=./test/tsconfig.json TS_NODE_COMPILER=\"ttypescript\" ./node_modules/.bin/mocha --watch --config ./.mocharc.json ./test/integration --project ./test/tsconfig.json",
    "lint:check": "node_modules/typescript/bin/tsc && ./node_modules/.bin/eslint 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && ./node_modules/.bin/prettier --list-different 'src/**/*.{js,ts}' 'test/**/*.{js,ts}'",
    "lint": "node_modules/typescript/bin/tsc --noEmit && ./node_modules/.bin/prettier --write 'src/**/*.{js,ts}' 'test/**/*.{js,ts}' && ./node_modules/.bin/eslint --fix 'src/**/*.{js,ts}' 'test/**/*.{js,ts}'"
  },
  "publishConfig": {
    "access": "public"
  }
}
