(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{150:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return p})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return s}));var n=a(2),b=a(9),r=(a(0),a(465)),l={id:"ejsonserializeradapter",title:"EJSONSerializerAdapter",sidebar_label:"EJSONSerializerAdapter"},p={id:"api/classes/ejsonserializeradapter",title:"EJSONSerializerAdapter",description:"Hierarchy",source:"@site/docs/api/classes/ejsonserializeradapter.md",permalink:"/eveble/docs/api/classes/ejsonserializeradapter",sidebar_label:"EJSONSerializerAdapter",sidebar:"api",previous:{title:"EjsonableMixin",permalink:"/eveble/docs/api/classes/ejsonablemixin"},next:{title:"ElementAlreadyExistsError",permalink:"/eveble/docs/api/classes/elementalreadyexistserror"}},c=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Implements",id:"implements",children:[]},{value:"Index",id:"index",children:[{value:"Constructors",id:"constructors",children:[]},{value:"Methods",id:"methods",children:[]}]},{value:"Constructors",id:"constructors-1",children:[{value:"constructor",id:"constructor",children:[]}]},{value:"Methods",id:"methods-1",children:[{value:"clone",id:"clone",children:[]},{value:"equals",id:"equals",children:[]},{value:"fromData",id:"fromdata",children:[]},{value:"fromJSONValue",id:"fromjsonvalue",children:[]},{value:"getFactory",id:"getfactory",children:[]},{value:"getType",id:"gettype",children:[]},{value:"getTypeKey",id:"gettypekey",children:[]},{value:"getTypeOrThrow",id:"gettypeorthrow",children:[]},{value:"getTypes",id:"gettypes",children:[]},{value:"getTypesNames",id:"gettypesnames",children:[]},{value:"hasType",id:"hastype",children:[]},{value:"isTypeInstance",id:"istypeinstance",children:[]},{value:"overrideType",id:"overridetype",children:[]},{value:"parse",id:"parse",children:[]},{value:"registerType",id:"registertype",children:[]},{value:"removeType",id:"removetype",children:[]},{value:"removeTypes",id:"removetypes",children:[]},{value:"stringify",id:"stringify",children:[]},{value:"toData",id:"todata",children:[]},{value:"toJSONValue",id:"tojsonvalue",children:[]}]}],i={rightToc:c};function s(e){var t=e.components,a=Object(b.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"EJSONSerializerAdapter"))),Object(r.b)("h2",{id:"implements"},"Implements"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer")),Object(r.b)("li",{parentName:"ul"},"Serializer")),Object(r.b)("h2",{id:"index"},"Index"),Object(r.b)("h3",{id:"constructors"},"Constructors"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#constructor"}),"constructor"))),Object(r.b)("h3",{id:"methods"},"Methods"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#clone"}),"clone")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#equals"}),"equals")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#fromdata"}),"fromData")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#fromjsonvalue"}),"fromJSONValue")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#getfactory"}),"getFactory")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#gettype"}),"getType")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#gettypekey"}),"getTypeKey")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#gettypeorthrow"}),"getTypeOrThrow")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#gettypes"}),"getTypes")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#gettypesnames"}),"getTypesNames")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#hastype"}),"hasType")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#istypeinstance"}),"isTypeInstance")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#overridetype"}),"overrideType")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#parse"}),"parse")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#registertype"}),"registerType")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#removetype"}),"removeType")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#removetypes"}),"removeTypes")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#stringify"}),"stringify")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#todata"}),"toData")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/ejsonserializeradapter#tojsonvalue"}),"toJSONValue"))),Object(r.b)("h2",{id:"constructors-1"},"Constructors"),Object(r.b)("h3",{id:"constructor"},"constructor"),Object(r.b)("p",null,"+"," ",Object(r.b)("strong",{parentName:"p"},"new EJSONSerializerAdapter"),"(",Object(r.b)("inlineCode",{parentName:"p"},"typeKey?"),": string): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/classes/ejsonserializeradapter"}),"EJSONSerializerAdapter"))),Object(r.b)("p",null,"Creates an instance of EJSONSerializerAdapter.\nCreates an instance of EJSONSerializerAdapter."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeKey?")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Identifier that will be use to identify custom types on ",Object(r.b)("inlineCode",{parentName:"td"},"fromData")," and ",Object(r.b)("inlineCode",{parentName:"td"},"toData")," serialization methods.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/classes/ejsonserializeradapter"}),"EJSONSerializerAdapter"))),Object(r.b)("h2",{id:"methods-1"},"Methods"),Object(r.b)("h3",{id:"clone"},"clone"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"clone"),"\u2039",Object(r.b)("strong",{parentName:"p"},"T"),"\u203a(",Object(r.b)("inlineCode",{parentName:"p"},"value"),": T): ",Object(r.b)("em",{parentName:"p"},"T")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Return a deep copy of value."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"@define('Address')\nclass Address extends Serializable {\n  city: string;\n  street: string;\n}\n\n@define('Person')\nclass Person extends Serializable {\n  firstName: string;\n  lastName: string;\n  address: Address;\n}\n\nconst address = new Address({\n  city: 'New York',\n  street: 'Wall Street',\n});\nconst person = new Person({\n  firstName: 'Jane',\n  lastName: 'Doe',\n  address,\n});\n\nconst clonedPerson = serializer.clone<Person>(person);\nexpect(clonedPerson).to.be.instanceof(Person);\nexpect(clonedPerson).to.be.eql(person);\nexpect(clonedPerson).to.not.be.equal(person);\nexpect(clonedPerson.address).to.not.be.equal(address);\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Type parameters:")),Object(r.b)("p",null,"\u25aa ",Object(r.b)("strong",{parentName:"p"},"T")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"value")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"T"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A value to copy.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"T")),Object(r.b)("p",null,"Cloned value without any reference"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"equals"},"equals"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"equals"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a"),": any, ",Object(r.b)("inlineCode",{parentName:"p"},"b"),": any, ",Object(r.b)("inlineCode",{parentName:"p"},"options?"),": object): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Return true if ",Object(r.b)("inlineCode",{parentName:"p"},"a")," and ",Object(r.b)("inlineCode",{parentName:"p"},"b")," are equal to each other. Return false otherwise.\nUses the ",Object(r.b)("inlineCode",{parentName:"p"},"equals")," method on ",Object(r.b)("inlineCode",{parentName:"p"},"a")," if present, otherwise performs a deep comparison."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"@define('Car')\nclass Car extends Serializable {\n  brand: string;\n}\n\nconst carA = new Car({\n  brand: 'Audi',\n});\nconst carB = new Car({\n  brand: 'Audi',\n});\n\nexpect(serializer.equals(carA, carB)).to.be.true;\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"@define('Car')\nclass Car extends Serializable {\n  brand: string;\n}\n\nconst carA = new Car({\n  brand: 'Audi',\n});\nconst carB = new Car({\n  brand: 'BMW',\n});\n\nexpect(serializer.equals(carA, carB)).to.be.false;\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("p",null,"\u25aa ",Object(r.b)("strong",{parentName:"p"},"a"),": ",Object(r.b)("em",{parentName:"p"},"any")),Object(r.b)("p",null,"Base value."),Object(r.b)("p",null,"\u25aa ",Object(r.b)("strong",{parentName:"p"},"b"),": ",Object(r.b)("em",{parentName:"p"},"any")),Object(r.b)("p",null,"Other value."),Object(r.b)("p",null,"\u25aa",Object(r.b)("inlineCode",{parentName:"p"},"Optional"),"  ",Object(r.b)("strong",{parentName:"p"},"options"),": ",Object(r.b)("em",{parentName:"p"},"object")),Object(r.b)("p",null,"Additional compering options."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"keyOrderSensitive")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"boolean")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"fromdata"},"fromData"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"fromData"),"\u2039",Object(r.b)("strong",{parentName:"p"},"T"),"\u203a(",Object(r.b)("inlineCode",{parentName:"p"},"data"),": Record\u2039string, any\u203a): ",Object(r.b)("em",{parentName:"p"},"T")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Converts record-compatible argument to plain-object data."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"@define('Car')\nclass Car extends Serializable {\n  brand: string;\n}\n\nconst data = {\n  _type: 'Car',\n  brand: 'Bentley',\n};\n\nconst typeInstance = serializer.fromData(data);\nexpect(typeInstance).to.be.instanceof(Car);\nexpect(typeInstance).to.be.eql(\n  new Car({\n    brand: 'Bentley',\n  })\n);\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Type parameters:")),Object(r.b)("p",null,"\u25aa ",Object(r.b)("strong",{parentName:"p"},"T"),": ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializable"}),"Serializable"))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"data")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Record\u2039string, any\u203a"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Data as an object.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"T")),Object(r.b)("p",null,"Converted data to ",Object(r.b)("inlineCode",{parentName:"p"},"Serializable")," instance."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"fromjsonvalue"},"fromJSONValue"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"fromJSONValue"),"(",Object(r.b)("inlineCode",{parentName:"p"},"value"),": Record\u2039string, any\u203a): ",Object(r.b)("em",{parentName:"p"},"Record\u2039string, any\u203a | ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializable"}),"Serializable"))),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Deserializes an EJSON value from its plain JSON representation."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"throws"))," {TypeNotFoundError}\nThrown if the value contains a serialized type that is not supported."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"@define('Address')\nclass Address extends Serializable {\n  city: string;\n  street: string;\n}\n\n@define('Person')\nclass Person extends Serializable {\n  firstName: string;\n  lastName: string;\n  address: Address;\n}\n\nconst json = {\n  $type: 'Person',\n  $value: {\n    firstName: 'Jane',\n    lastName: 'Doe',\n    address: {\n      $type: 'Address',\n      $value: {\n        city: 'New York',\n        street: 'Wall Street',\n      },\n    },\n  },\n};\nconst person = serializer.fromJSONValue(json);\nexpect(person).to.be.instanceof(Person);\nexpect(person).to.be.eql(\n  new Person({\n    firstName: 'Jane',\n    lastName: 'Doe',\n    address: new Address({\n      city: 'New York',\n      street: 'Wall Street',\n    }),\n  })\n);\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"const date = new Date('December 17, 1995 03:24:00');\nconst obj = {\n  $date: date,\n};\n\nconst json = serializer.toJSONValue(obj);\nexpect(serializer.fromJSONValue(json)).to.be.eql(date);\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"value")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Record\u2039string, any\u203a"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A value to deserialize into EJSON.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Record\u2039string, any\u203a | ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializable"}),"Serializable"))),Object(r.b)("p",null,"Deserialized EJSON value."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getfactory"},"getFactory"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getFactory"),"(",Object(r.b)("inlineCode",{parentName:"p"},"typeName"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName"),"): ",Object(r.b)("em",{parentName:"p"},"Function & object")),Object(r.b)("p",null,"Returns factory for type name."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeName")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type name for type.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Function & object")),Object(r.b)("p",null,"Factory function for type."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gettype"},"getType"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getType"),"(",Object(r.b)("inlineCode",{parentName:"p"},"typeName"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName"),"): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#type"}),"Type")," | undefined")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Returns type for type name."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeName")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type name for type.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#type"}),"Type")," | undefined")),Object(r.b)("p",null,"Type constructor, else ",Object(r.b)("inlineCode",{parentName:"p"},"undefined"),";"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gettypekey"},"getTypeKey"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getTypeKey"),"(): ",Object(r.b)("em",{parentName:"p"},"string")),Object(r.b)("p",null,"Returns type key identifier."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"string")),Object(r.b)("p",null,"Type key identifier as a string."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gettypeorthrow"},"getTypeOrThrow"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getTypeOrThrow"),"(",Object(r.b)("inlineCode",{parentName:"p"},"typeName"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName"),"): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#type"}),"Type"))),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Returns type for type name."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"throws"))," {TypeNotFoundError}\nThrown if type for type name can't be found."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeName")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type name for type.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#type"}),"Type"))),Object(r.b)("p",null,"Type constructor, else throws;"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gettypes"},"getTypes"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getTypes"),"(): ",Object(r.b)("em",{parentName:"p"},"Map\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName"),", ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#type"}),"Type"),"\u203a")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Returns all data-types registered on EJSON."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Map\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName"),", ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#type"}),"Type"),"\u203a")),Object(r.b)("p",null,"Returns object with relation typeName:type."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gettypesnames"},"getTypesNames"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getTypesNames"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName"),"[]")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Returns all types names."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName"),"[]")),Object(r.b)("p",null,"List of type names of all registered types."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"hastype"},"hasType"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"hasType"),"(",Object(r.b)("inlineCode",{parentName:"p"},"typeName"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName"),"): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Evaluates if serializer has registered type by type name."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeName")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type name for type.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns ",Object(r.b)("inlineCode",{parentName:"p"},"true")," if type is registered, else ",Object(r.b)("inlineCode",{parentName:"p"},"false"),"."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"istypeinstance"},"isTypeInstance"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isTypeInstance"),"(",Object(r.b)("inlineCode",{parentName:"p"},"typeInstance"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.serializable"}),"Serializable"),"): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Evaluates if provided instance belongs to one of custom types."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeInstance")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.serializable"}),"Serializable")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Instance of a type implementing ",Object(r.b)("inlineCode",{parentName:"td"},"Serializable")," interface.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns ",Object(r.b)("inlineCode",{parentName:"p"},"true")," if instance is of registered type, else ",Object(r.b)("inlineCode",{parentName:"p"},"false"),"."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"overridetype"},"overrideType"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"overrideType"),"(",Object(r.b)("inlineCode",{parentName:"p"},"typeName"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName"),", ",Object(r.b)("inlineCode",{parentName:"p"},"type"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#type"}),"Type"),"): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Override a data-type on serializer."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeName")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type's name for which type will be registered.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"type")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#type"}),"Type")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type constructor implementing ",Object(r.b)("inlineCode",{parentName:"td"},"Serializable")," interface for registration.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"parse"},"parse"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"parse"),"(",Object(r.b)("inlineCode",{parentName:"p"},"str"),": string): ",Object(r.b)("em",{parentName:"p"},"any")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Parse a string into an EJSON value."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"throws"))," {UnparsableValueError}\nThrown if the argument is not a valid EJSON."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),'@define(\'Address\')\nclass Address extends Serializable {\n  city: string;\n  street: string;\n}\n\n@define(\'Person\')\nclass Person extends Serializable {\n  firstName: string;\n  lastName: string;\n  address: Address;\n}\n\nconst string =\n\'{"$type":"Person","$value":{"firstName":"Jane","lastName":"Doe","address":{"$type":"Address","$value":{"city":"New York","street":"Wall Street"}}}}\';\n\nconst ejsonValue = serializer.parse(string);\nexpect(ejsonValue).to.be.instanceof(Person);\nexpect(ejsonValue).to.be.eql(\n  new Person({\n    firstName: \'Jane\',\n    lastName: \'Doe\',\n    address: new Address({\n      city: \'New York\',\n      street: \'Wall Street\',\n    }),\n  })\n);\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"str")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A string to parse into an EJSON value.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"any")),Object(r.b)("p",null,"Parsed value to type or ",Object(r.b)("inlineCode",{parentName:"p"},"Serializable")," instance."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"registertype"},"registerType"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"registerType"),"(",Object(r.b)("inlineCode",{parentName:"p"},"typeName"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName"),", ",Object(r.b)("inlineCode",{parentName:"p"},"type"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#type"}),"Type"),", ",Object(r.b)("inlineCode",{parentName:"p"},"shouldOverride?"),": boolean): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Register a data-type on serializer."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"throws"))," {UnregistrableTypeError}\nThrown if type does not implement ",Object(r.b)("inlineCode",{parentName:"p"},"Serializable")," interface."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"throws"))," {TypeExistsError}\nThrown if type would overridden on EJSON without explicit call."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeName")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type's name for which mapping will be created.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"type")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#type"}),"Type")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type constructor implementing ",Object(r.b)("inlineCode",{parentName:"td"},"Serializable")," interface for registration. Must contain typeName - a tag for your custom type that must be unique among other data types defined in your project.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"shouldOverride?")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Flag indicating that type should be overridden if exist.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"removetype"},"removeType"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"removeType"),"(",Object(r.b)("inlineCode",{parentName:"p"},"typeName"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName"),"): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Removes data-type by its type name."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeName")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#typename"}),"TypeName")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type name for type.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"removetypes"},"removeTypes"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"removeTypes"),"(): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Allows to remove all data-types from EJSON."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"stringify"},"stringify"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"stringify"),"(",Object(r.b)("inlineCode",{parentName:"p"},"value"),": any, ",Object(r.b)("inlineCode",{parentName:"p"},"options?"),": object): ",Object(r.b)("em",{parentName:"p"},"string")),Object(r.b)("p",null,"Serialize a value to a string with value's initial type preserved."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),'@define(\'Address\')\nclass Address extends Serializable {\n  city: string;\n  street: string;\n}\n\n@define(\'Person\')\nclass Person extends Serializable {\n  firstName: string;\n  lastName: string;\n  address: Address;\n}\n\nconst person = new Person({\n  firstName: \'Jane\',\n  lastName: \'Doe\',\n  address: new Address({\n    city: \'New York\',\n    street: \'Wall Street\',\n  }),\n});\n\nexpect(serializer.stringify(person)).to.be.equal(\n  \'{"$type":"Person","$value":{"firstName":"Jane","lastName":"Doe","address":{"$type":"Address","$value":{"city":"New York","street":"Wall Street"}}}}\'\n);\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("p",null,"\u25aa ",Object(r.b)("strong",{parentName:"p"},"value"),": ",Object(r.b)("em",{parentName:"p"},"any")),Object(r.b)("p",null,"A value or ",Object(r.b)("inlineCode",{parentName:"p"},"Serializable")," instance to stringify."),Object(r.b)("p",null,"\u25aa",Object(r.b)("inlineCode",{parentName:"p"},"Optional"),"  ",Object(r.b)("strong",{parentName:"p"},"options"),": ",Object(r.b)("em",{parentName:"p"},"object")),Object(r.b)("p",null,"Optional serialization options."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"canonical")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"boolean")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"indent")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"boolean ","|"," number")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"string")),Object(r.b)("p",null,"Stringified value."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"todata"},"toData"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"toData"),"(",Object(r.b)("inlineCode",{parentName:"p"},"serializable"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.serializable"}),"Serializable"),"): ",Object(r.b)("em",{parentName:"p"},"Record\u2039string, any\u203a")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Converts ",Object(r.b)("inlineCode",{parentName:"p"},"Serializable")," to plain-object data."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"throws"))," {UnregistrableTypeError}\nThrown if provided argument is not a type implementing ",Object(r.b)("inlineCode",{parentName:"p"},"Serializable")," interface."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"@define('Car')\nclass Car extends Serializable {\n  brand: string;\n}\n\nconst car = new Car({\n  brand: 'Bentley',\n});\nexpect(serializer.toData(car)).to.be.eql({\n  _type: 'Car',\n  brand: 'Bentley',\n});\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"serializable")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.serializable"}),"Serializable")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Serializable")," instance.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Record\u2039string, any\u203a")),Object(r.b)("p",null,"Converted ",Object(r.b)("inlineCode",{parentName:"p"},"Serializable")," to plain-object data."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"tojsonvalue"},"toJSONValue"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"toJSONValue"),"(",Object(r.b)("inlineCode",{parentName:"p"},"value"),": any): ",Object(r.b)("em",{parentName:"p"},"any")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Implementation of ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.serializer"}),"Serializer"))),Object(r.b)("p",null,"Serializes value into a JSON-compatible value. It preserves all custom\nfields, however the initial value type is not saved."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"remarks")),"\nMethod ",Object(r.b)("inlineCode",{parentName:"p"},"toJSONValue")," is not returning type serialized in object structure like"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),'{$type: "MyType", $value: {key: "my-string"}}\n')),Object(r.b)("p",null,"Since that would impact ",Object(r.b)("inlineCode",{parentName:"p"},"stringify")," method that under the hood uses ",Object(r.b)("inlineCode",{parentName:"p"},"toJSONValue"),".\nMethod ",Object(r.b)("inlineCode",{parentName:"p"},"stringify")," will produce string that has exact structure like presented above."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"@define('Address')\nclass Address extends Serializable {\n  city: string;\n  street: string;\n}\n\n@define('Person')\nclass Person extends Serializable {\n  firstName: string;\n  lastName: string;\n  address: Address;\n}\n\nconst person = new Person({\n  firstName: 'Jane',\n  lastName: 'Doe',\n  address: new Address({\n    city: 'New York',\n    street: 'Wall Street',\n  }),\n});\n\nexpect(person.toJSONValue()).to.be.eql({\n  firstName: 'Jane',\n  lastName: 'Doe',\n  address: {\n    city: 'New York',\n    street: 'Wall Street',\n  },\n});\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"const date = new Date();\nconst obj = {\n  $date: date,\n};\n\nexpect(\n  serializer.toJSONValue(obj)\n).to.be.eql({ $date: date.toJSON() });\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"value")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"JSON-compatible value like object or ",Object(r.b)("inlineCode",{parentName:"td"},"Serializable")," instance.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"any")),Object(r.b)("p",null,"Serialized value as JSON-compatible object without type name($type) identifers preserved."))}s.isMDXComponent=!0},465:function(e,t,a){"use strict";a.d(t,"a",(function(){return O})),a.d(t,"b",(function(){return m}));var n=a(0),b=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,b=function(e,t){if(null==e)return{};var a,n,b={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(b[a]=e[a]);return b}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(b[a]=e[a])}return b}var i=b.a.createContext({}),s=function(e){var t=b.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},O=function(e){var t=s(e.components);return b.a.createElement(i.Provider,{value:t},e.children)},j={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},o=b.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),O=s(a),o=n,m=O["".concat(l,".").concat(o)]||O[o]||j[o]||r;return a?b.a.createElement(m,p(p({ref:t},i),{},{components:a})):b.a.createElement(m,p({ref:t},i))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=o;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:n,l[1]=p;for(var i=2;i<r;i++)l[i]=a[i];return b.a.createElement.apply(null,l)}return b.a.createElement.apply(null,a)}o.displayName="MDXCreateElement"}}]);