(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{152:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return O}));var n=a(2),b=a(9),r=(a(0),a(453)),l={id:"rfc5424loggingmixin",title:"RFC5424LoggingMixin",sidebar_label:"RFC5424LoggingMixin"},c={id:"api/classes/rfc5424loggingmixin",title:"RFC5424LoggingMixin",description:"Hierarchy",source:"@site/docs/api/classes/rfc5424loggingmixin.md",permalink:"/eveble/docs/api/classes/rfc5424loggingmixin",sidebar_label:"RFC5424LoggingMixin",sidebar:"api",previous:{title:"RebuildingResult",permalink:"/eveble/docs/api/classes/rebuildingresult"},next:{title:"Router",permalink:"/eveble/docs/api/classes/router"}},i=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Index",id:"index",children:[{value:"Methods",id:"methods",children:[]}]},{value:"Methods",id:"methods-1",children:[{value:"alert",id:"alert",children:[]},{value:"crit",id:"crit",children:[]},{value:"debug",id:"debug",children:[]},{value:"emerg",id:"emerg",children:[]},{value:"error",id:"error",children:[]},{value:"info",id:"info",children:[]},{value:"log",id:"log",children:[]},{value:"notice",id:"notice",children:[]},{value:"warning",id:"warning",children:[]}]}],p={rightToc:i};function O(e){var t=e.components,a=Object(b.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"RFC5424LoggingMixin")),Object(r.b)("p",{parentName:"li"},"\u21b3 ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/classes/logtransport"}),"LogTransport")))),Object(r.b)("h2",{id:"index"},"Index"),Object(r.b)("h3",{id:"methods"},"Methods"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/rfc5424loggingmixin#alert"}),"alert")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/rfc5424loggingmixin#crit"}),"crit")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/rfc5424loggingmixin#debug"}),"debug")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/rfc5424loggingmixin#emerg"}),"emerg")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/rfc5424loggingmixin#error"}),"error")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/rfc5424loggingmixin#info"}),"info")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/rfc5424loggingmixin#log"}),"log")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/rfc5424loggingmixin#notice"}),"notice")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/rfc5424loggingmixin#warning"}),"warning"))),Object(r.b)("h2",{id:"methods-1"},"Methods"),Object(r.b)("h3",{id:"alert"},"alert"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"alert"),"(",Object(r.b)("inlineCode",{parentName:"p"},"entry"),": string | ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry"),", ...",Object(r.b)("inlineCode",{parentName:"p"},"args"),": any[]): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Logs action must be taken immediately."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"entry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Logging entry as a string or loggable.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"...args")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any[]"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any other arguments that will be attached to log entry.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"crit"},"crit"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"crit"),"(",Object(r.b)("inlineCode",{parentName:"p"},"entry"),": string | ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry"),", ...",Object(r.b)("inlineCode",{parentName:"p"},"args"),": any[]): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Logs critical conditions."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"entry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Logging entry as a string or loggable.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"...args")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any[]"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any other arguments that will be attached to log entry.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"debug"},"debug"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"debug"),"(",Object(r.b)("inlineCode",{parentName:"p"},"entry"),": string | ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry"),", ...",Object(r.b)("inlineCode",{parentName:"p"},"args"),": any[]): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Logs debug-level messages."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"entry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Logging entry as a string or loggable.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"...args")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any[]"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any other arguments that will be attached to log entry.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"emerg"},"emerg"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"emerg"),"(",Object(r.b)("inlineCode",{parentName:"p"},"entry"),": string | ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry"),", ...",Object(r.b)("inlineCode",{parentName:"p"},"args"),": any[]): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Logs emergency system is unusable."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"entry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Logging entry as a string or loggable.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"...args")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any[]"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any other arguments that will be attached to log entry.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"error"},"error"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"error"),"(",Object(r.b)("inlineCode",{parentName:"p"},"entry"),": string | ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry"),", ...",Object(r.b)("inlineCode",{parentName:"p"},"args"),": any[]): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Logs error conditions."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"entry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Logging entry as a string or loggable.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"...args")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any[]"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any other arguments that will be attached to log entry.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"info"},"info"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"info"),"(",Object(r.b)("inlineCode",{parentName:"p"},"entry"),": string | ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry"),", ...",Object(r.b)("inlineCode",{parentName:"p"},"args"),": any[]): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Logs informational messages."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"entry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Logging entry as a string or loggable.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"...args")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any[]"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any other arguments that will be attached to log entry.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"log"},"log"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"log"),"(",Object(r.b)("inlineCode",{parentName:"p"},"entry"),": string | ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry"),", ...",Object(r.b)("inlineCode",{parentName:"p"},"args"),": any[]): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"[PLACEHOLDER]",": Logs message for level."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"entry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Logging entry as a string or loggable.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"...args")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any[]"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any other arguments that will be attached to log entry.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"notice"},"notice"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"notice"),"(",Object(r.b)("inlineCode",{parentName:"p"},"entry"),": string | ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry"),", ...",Object(r.b)("inlineCode",{parentName:"p"},"args"),": any[]): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Logs normal but significant condition."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"entry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Logging entry as a string or loggable.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"...args")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any[]"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any other arguments that will be attached to log entry.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"warning"},"warning"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"warning"),"(",Object(r.b)("inlineCode",{parentName:"p"},"entry"),": string | ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry"),", ...",Object(r.b)("inlineCode",{parentName:"p"},"args"),": any[]): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Logs warning conditions."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"entry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.logentry"}),"LogEntry")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Logging entry as a string or loggable.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"...args")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any[]"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Any other arguments that will be attached to log entry.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")))}O.isMDXComponent=!0},453:function(e,t,a){"use strict";a.d(t,"a",(function(){return j})),a.d(t,"b",(function(){return m}));var n=a(0),b=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,b=function(e,t){if(null==e)return{};var a,n,b={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(b[a]=e[a]);return b}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(b[a]=e[a])}return b}var p=b.a.createContext({}),O=function(e){var t=b.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},j=function(e){var t=O(e.components);return b.a.createElement(p.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},g=b.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),j=O(a),g=n,m=j["".concat(l,".").concat(g)]||j[g]||o[g]||r;return a?b.a.createElement(m,c(c({ref:t},p),{},{components:a})):b.a.createElement(m,c({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=g;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var p=2;p<r;p++)l[p]=a[p];return b.a.createElement.apply(null,l)}return b.a.createElement.apply(null,a)}g.displayName="MDXCreateElement"}}]);