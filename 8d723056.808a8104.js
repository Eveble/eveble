(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{324:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(9),s=(a(0),a(465)),b={id:"statusfulassertion",title:"StatusfulAssertion",sidebar_label:"StatusfulAssertion"},c={id:"api/classes/statusfulassertion",title:"StatusfulAssertion",description:"Hierarchy",source:"@site/docs/api/classes/statusfulassertion.md",permalink:"/eveble/docs/api/classes/statusfulassertion",sidebar_label:"StatusfulAssertion",sidebar:"api",previous:{title:"StatusError",permalink:"/eveble/docs/api/classes/statuserror"},next:{title:"StatusfulMixin",permalink:"/eveble/docs/api/classes/statusfulmixin"}},i=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Index",id:"index",children:[{value:"Constructors",id:"constructors",children:[]},{value:"Properties",id:"properties",children:[]},{value:"Methods",id:"methods",children:[]}]},{value:"Constructors",id:"constructors-1",children:[{value:"constructor",id:"constructor",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"api",id:"api",children:[]},{value:"asserter",id:"asserter",children:[]}]},{value:"Methods",id:"methods-1",children:[{value:"ensureIsInOneOfStatuses",id:"ensureisinoneofstatuses",children:[]},{value:"ensureIsInStatus",id:"ensureisinstatus",children:[]},{value:"ensureIsNotInOneOfStatuses",id:"ensureisnotinoneofstatuses",children:[]},{value:"ensureIsNotInStatus",id:"ensureisnotinstatus",children:[]},{value:"getApi",id:"getapi",children:[]}]}],l={rightToc:i};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/classes/assertion"}),"Assertion"))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},"Assertion"),Object(s.b)("p",{parentName:"li"},"\u21b3 ",Object(s.b)("strong",{parentName:"p"},"StatusfulAssertion")))),Object(s.b)("h2",{id:"index"},"Index"),Object(s.b)("h3",{id:"constructors"},"Constructors"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/statusfulassertion#constructor"}),"constructor"))),Object(s.b)("h3",{id:"properties"},"Properties"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/statusfulassertion#api"}),"api")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/statusfulassertion#asserter"}),"asserter"))),Object(s.b)("h3",{id:"methods"},"Methods"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/statusfulassertion#ensureisinoneofstatuses"}),"ensureIsInOneOfStatuses")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/statusfulassertion#ensureisinstatus"}),"ensureIsInStatus")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/statusfulassertion#ensureisnotinoneofstatuses"}),"ensureIsNotInOneOfStatuses")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/statusfulassertion#ensureisnotinstatus"}),"ensureIsNotInStatus")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(n.a)({parentName:"li"},{href:"/eveble/docs/api/classes/statusfulassertion#getapi"}),"getApi"))),Object(s.b)("h2",{id:"constructors-1"},"Constructors"),Object(s.b)("h3",{id:"constructor"},"constructor"),Object(s.b)("p",null,"+"," ",Object(s.b)("strong",{parentName:"p"},"new StatusfulAssertion"),"(",Object(s.b)("inlineCode",{parentName:"p"},"asserter"),": ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/interfaces/types.asserter"}),"Asserter"),"): ",Object(s.b)("em",{parentName:"p"},Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/classes/statusfulassertion"}),"StatusfulAssertion"))),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Inherited from ",Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/classes/assertion"}),"Assertion"),".",Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/classes/assertion#constructor"}),"constructor"))),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Overrides void")),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Parameters:")),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("inlineCode",{parentName:"td"},"asserter")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/interfaces/types.asserter"}),"Asserter"))))),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Returns:")," ",Object(s.b)("em",{parentName:"p"},Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/classes/statusfulassertion"}),"StatusfulAssertion"))),Object(s.b)("h2",{id:"properties-1"},"Properties"),Object(s.b)("h3",{id:"api"},"api"),Object(s.b)("p",null,"\u2022 ",Object(s.b)("strong",{parentName:"p"},"api"),": ",Object(s.b)("em",{parentName:"p"},"Map\u2039string, Function\u203a")," = new Map([\n","['ensure.is.inStatus', this.ensureIsInStatus as Function]",",\n","['ensure.is.not.inStatus', this.ensureIsNotInStatus as Function]",",\n","['ensure.is.inOneOfStatuses', this.ensureIsInOneOfStatuses as Function]",",\n","[\n'ensure.is.not.inOneOfStatuses',\nthis.ensureIsNotInOneOfStatuses as Function,\n]",",\n])"),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Overrides ",Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/classes/assertion"}),"Assertion"),".",Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/classes/assertion#api"}),"api"))),Object(s.b)("hr",null),Object(s.b)("h3",{id:"asserter"},"asserter"),Object(s.b)("p",null,"\u2022 ",Object(s.b)("strong",{parentName:"p"},"asserter"),": ",Object(s.b)("em",{parentName:"p"},Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.asserter"}),"Asserter"))),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Inherited from ",Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/classes/assertion"}),"Assertion"),".",Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/classes/assertion#asserter"}),"asserter"))),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Overrides void")),Object(s.b)("h2",{id:"methods-1"},"Methods"),Object(s.b)("h3",{id:"ensureisinoneofstatuses"},"ensureIsInOneOfStatuses"),Object(s.b)("p",null,"\u25b8 ",Object(s.b)("strong",{parentName:"p"},"ensureIsInOneOfStatuses"),"(",Object(s.b)("inlineCode",{parentName:"p"},"expectedStatuses"),": ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#status"}),"Status"),"[], ",Object(s.b)("inlineCode",{parentName:"p"},"error?"),": ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/classes/domainerror"}),"DomainError"),"): ",Object(s.b)("em",{parentName:"p"},Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.asserter"}),"Asserter"))),Object(s.b)("p",null,"Ensures that ",Object(s.b)("inlineCode",{parentName:"p"},"Entity")," is one of expected statuses."),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Parameters:")),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("inlineCode",{parentName:"td"},"expectedStatuses")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#status"}),"Status"),"[]"),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Expected list of statuses in one of which ",Object(s.b)("inlineCode",{parentName:"td"},"Entity")," should be.")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("inlineCode",{parentName:"td"},"error?")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/classes/domainerror"}),"DomainError")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Optional instance of ",Object(s.b)("inlineCode",{parentName:"td"},"DomainError")," that will be thrown upon failed assertion.")))),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Returns:")," ",Object(s.b)("em",{parentName:"p"},Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.asserter"}),"Asserter"))),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"Asserter")," implementation instance."),Object(s.b)("hr",null),Object(s.b)("h3",{id:"ensureisinstatus"},"ensureIsInStatus"),Object(s.b)("p",null,"\u25b8 ",Object(s.b)("strong",{parentName:"p"},"ensureIsInStatus"),"(",Object(s.b)("inlineCode",{parentName:"p"},"expectedStatus"),": ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#status"}),"Status"),", ",Object(s.b)("inlineCode",{parentName:"p"},"error?"),": ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/classes/domainerror"}),"DomainError"),"): ",Object(s.b)("em",{parentName:"p"},Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.asserter"}),"Asserter"))),Object(s.b)("p",null,"Ensures that ",Object(s.b)("inlineCode",{parentName:"p"},"Entity")," is expected status."),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Parameters:")),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("inlineCode",{parentName:"td"},"expectedStatus")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#status"}),"Status")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Expected status that ",Object(s.b)("inlineCode",{parentName:"td"},"Entity")," should be in.")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("inlineCode",{parentName:"td"},"error?")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/classes/domainerror"}),"DomainError")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Optional instance of ",Object(s.b)("inlineCode",{parentName:"td"},"DomainError")," that will be thrown upon failed assertion.")))),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Returns:")," ",Object(s.b)("em",{parentName:"p"},Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.asserter"}),"Asserter"))),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"Asserter")," implementation instance."),Object(s.b)("hr",null),Object(s.b)("h3",{id:"ensureisnotinoneofstatuses"},"ensureIsNotInOneOfStatuses"),Object(s.b)("p",null,"\u25b8 ",Object(s.b)("strong",{parentName:"p"},"ensureIsNotInOneOfStatuses"),"(",Object(s.b)("inlineCode",{parentName:"p"},"expectedStatuses"),": ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#status"}),"Status"),"[], ",Object(s.b)("inlineCode",{parentName:"p"},"error?"),": ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/classes/domainerror"}),"DomainError"),"): ",Object(s.b)("em",{parentName:"p"},Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.asserter"}),"Asserter"))),Object(s.b)("p",null,"Ensures that ",Object(s.b)("inlineCode",{parentName:"p"},"Entity")," is NOT in one of expected statuses."),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Parameters:")),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("inlineCode",{parentName:"td"},"expectedStatuses")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#status"}),"Status"),"[]"),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Expected list of statuses in one of which ",Object(s.b)("inlineCode",{parentName:"td"},"Entity")," shouldn't be.")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("inlineCode",{parentName:"td"},"error?")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/classes/domainerror"}),"DomainError")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Optional instance of ",Object(s.b)("inlineCode",{parentName:"td"},"DomainError")," that will be thrown upon failed assertion.")))),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Returns:")," ",Object(s.b)("em",{parentName:"p"},Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.asserter"}),"Asserter"))),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"Asserter")," implementation instance."),Object(s.b)("hr",null),Object(s.b)("h3",{id:"ensureisnotinstatus"},"ensureIsNotInStatus"),Object(s.b)("p",null,"\u25b8 ",Object(s.b)("strong",{parentName:"p"},"ensureIsNotInStatus"),"(",Object(s.b)("inlineCode",{parentName:"p"},"expectedStatus"),": ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#status"}),"Status"),", ",Object(s.b)("inlineCode",{parentName:"p"},"error?"),": ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/eveble/docs/api/classes/domainerror"}),"DomainError"),"): ",Object(s.b)("em",{parentName:"p"},Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.asserter"}),"Asserter"))),Object(s.b)("p",null,"Ensures that ",Object(s.b)("inlineCode",{parentName:"p"},"Entity")," is NOT in expected status."),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Parameters:")),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("inlineCode",{parentName:"td"},"expectedStatus")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#status"}),"Status")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Expected status that ",Object(s.b)("inlineCode",{parentName:"td"},"Entity")," shouldn't be in.")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("inlineCode",{parentName:"td"},"error?")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"/eveble/docs/api/classes/domainerror"}),"DomainError")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Optional instance of ",Object(s.b)("inlineCode",{parentName:"td"},"DomainError")," that will be thrown upon failed assertion.")))),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Returns:")," ",Object(s.b)("em",{parentName:"p"},Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.asserter"}),"Asserter"))),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"Asserter")," implementation instance."),Object(s.b)("hr",null),Object(s.b)("h3",{id:"getapi"},"getApi"),Object(s.b)("p",null,"\u25b8 ",Object(s.b)("strong",{parentName:"p"},"getApi"),"(): ",Object(s.b)("em",{parentName:"p"},"Map\u2039string, Function\u203a")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Inherited from ",Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/classes/assertion"}),"Assertion"),".",Object(s.b)("a",Object(n.a)({parentName:"em"},{href:"/eveble/docs/api/classes/assertion#getapi"}),"getApi"))),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Overrides void")),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Returns:")," ",Object(s.b)("em",{parentName:"p"},"Map\u2039string, Function\u203a")))}p.isMDXComponent=!0},465:function(e,t,a){"use strict";a.d(t,"a",(function(){return o})),a.d(t,"b",(function(){return j}));var n=a(0),r=a.n(n);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},o=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},O={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,b=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),o=p(a),u=n,j=o["".concat(b,".").concat(u)]||o[u]||O[u]||s;return a?r.a.createElement(j,c(c({ref:t},l),{},{components:a})):r.a.createElement(j,c({ref:t},l))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,b=new Array(s);b[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,b[1]=c;for(var l=2;l<s;l++)b[l]=a[l];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);