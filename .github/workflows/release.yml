# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Through out this whole github action there are two distinct flows that
# allows for releasing on npm & github OR github only.
# This allows for separation on public repositories and private ones
# without publishing release to npm.
# Job names are prefixed with [public] & [private] tags.
# The switch is based on top of conditional:
# if: ${{ env.IS_PRIVATE != 'true' }}
# and environment variable "IS_PRIVATE" set to `true` or `false`
# that can be defined inside Github's repository `Settings`
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Evaluates on push event if release is necessary and if so - create a release Pull Request
name: Push to release branches
on:
  push:
    branches: [master, next, alpha, beta]
# Setting an environment variable with the value of a configuration variable
env:
  IS_PRIVATE: ${{ vars.IS_PRIVATE }}
  USERNAME: ${{ github.event.github.actor }}
  EVEBLE_TYPES_AUTH_TOKEN: ${{ secrets.EVEBLE_TYPES_AUTH_TOKEN }}
  NODE_VERSION: 18
  SEMANTIC_VERSION: 19.0.5
jobs:
  # Release with semantic-release an auto-merged branch to: Github repository, NPM, Github package registry
  release:
    name: Release to Github, GitHub Packages, NPM
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      issues: write
      pull-requests: write
    if: >
      github.actor != 'semantic-release-bot'
      && ! contains(github.event.head_commit.message, 'chore(release):')
    steps:
      - name: ‚ôªÔ∏è Environment
        run: |
          echo IS_PRIVATE: ${{ env.IS_PRIVATE }}

      - name: üê≥ Start MongoDB Replica Set
        run: |
          # Start MongoDB with replica set and authentication
          docker run --rm -d \
            -p 27017:27017 \
            --name mongodb-rs \
            -e MONGO_INITDB_ROOT_USERNAME=admin \
            -e MONGO_INITDB_ROOT_PASSWORD=password \
            mongo:6.0 \
            mongod --replSet rs0 --bind_ip_all

          # Wait for MongoDB to start
          echo "Waiting for MongoDB to start..."
          sleep 5

          # Initialize replica set using Docker bridge gateway IP
          echo "Initializing replica set..."
          docker run --rm mongo:6.0 \
            mongosh --host 172.17.0.1 \
            -u admin -p password \
            --authenticationDatabase admin \
            --eval 'rs.initiate({_id: "rs0", members: [{_id: 0, host: "172.17.0.1:27017"}]})'

          # Wait for replica set to be ready
          echo "Waiting for replica set to be ready..."
          sleep 5

      - name: ‚§µÔ∏è Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ‚öôÔ∏è [public]Setup Node
        if: ${{ env.IS_PRIVATE != 'true' }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          registry-url: 'https://registry.npmjs.org'
          scope: ${{ env.USERNAME }}

      - name: ‚öôÔ∏è [private]Setup Node
        if: ${{ env.IS_PRIVATE == 'true' }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          registry-url: 'https://npm.pkg.github.com/'

      - name: üöß Install dependencies
        run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{ env.EVEBLE_TYPES_AUTH_TOKEN }}

      - name: ‚úÖ Test
        run: yarn test
        env:
          MONGO_URI: mongodb://root:password@localhost:27017/?replicaSet=rs0&authSource=admin

      - name: üóùÔ∏è Build
        run: yarn build

      - name: üöÄ [public]Release
        if: ${{ env.IS_PRIVATE != 'true' }}
        uses: cycjimmy/semantic-release-action@v3
        id: public-semantic
        with:
          semantic_version: ${{env.SEMANTIC_VERSION}}
          dry_run: false
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1
            @semantic-release/npm@9.0.2
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: üöÄ [private]Release
        if: ${{ env.IS_PRIVATE == 'true' }}
        uses: cycjimmy/semantic-release-action@v3
        id: private-semantic
        with:
          semantic_version: ${{env.SEMANTIC_VERSION}}
          dry_run: false
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1
            @semantic-release/npm@9.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üéâ Output release
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}
          echo @${{ env.USERNAME }}

      - name: üîÄ Setup Node with GitHub Package Registry
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}.x
          registry-url: 'https://npm.pkg.github.com'
          scope: ${{ env.USERNAME }}
          always-auth: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ env.GITHUB_TOKEN }}

      - name: üéâ Publish To GitHub Package Registry
        if: steps.semantic.outputs.new_release_published == 'true'
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üöß Install dependencies on Docusaurus
        run: |
          cd ./website
          yarn install

      - name: üìÑ Build docs
        run: yarn docs:build

      - name: Fix 404 Page not found for Github in case .nojekyll is missing in ./website/static
        run: touch ./website/build/.nojekyll

      - name: ü§î Deploy documentation to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website/build
          publish_branch: gh-pages
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
