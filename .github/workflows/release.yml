# Evaluates on push event if release is necessary and if so - create a release Pull Request
name: Push to release branches
on:
  push:
    branches: [master, next, alpha, beta]
jobs:
  # Release with semantic-release an auto-merged branch to: Github repository, NPM, Github package registry
  release:
    name: Release to Github, NPM, Github, GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      packages: write
    if: >
      github.actor != 'semantic-release-bot'
      && ! contains(github.event.head_commit.message, 'chore(release):')
    env:
      USERNAME: ${{ github.event.github.actor }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      EVEBLE_TYPES_AUTH_TOKEN: ${{ secrets.EVEBLE_TYPES_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node@18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://npm.pkg.github.com/'
          scope: ${{ env.USERNAME }}
      - name: Install dependencies
        run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{ env.EVEBLE_TYPES_AUTH_TOKEN }}
      - name: ðŸ“¦ã€€Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        with:
          semantic_version: 19.0.5
          dry_run: false
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Setup Node with GitHub Package Registry
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          registry-url: 'https://npm.pkg.github.com'
          scope: ${{ env.USERNAME }}
      - name: Publish To GitHub Package Registry
        if: steps.semantic.outputs.new_release_published == 'true'
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ env.GITHUB_TOKEN }}
