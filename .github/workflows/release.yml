# Evaluates on push event if release is necessary and if so - create a release Pull Request
name: Push to release branches
on:
  push:
    branches: [master, next, alpha, beta]
jobs:
  # Release with semantic-release an auto-merged branch to: Github repository, NPM, Github package registry
  release:
    name: Release to Github, NPM, Github, GitHub Packages
    runs-on: ubuntu-latest
    # needs: [test, build]
    needs: [build]
    permissions:
      packages: write
    # Released version with semantic-release will use `semantic-release-bot` as
    # commit author and commit with message:
    #"chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
    # This is generated by `@semantic-release/git` in `.releaserc.json`
    if: >
      github.actor != 'semantic-release-bot'
      && ! contains(github.event.head_commit.message, 'chore(release):')
    env:
      USERNAME: ${{ github.event.github.actor }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      EVEBLE_TYPES_AUTH_TOKEN: ${{ secrets.EVEBLE_TYPES_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node@18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://npm.pkg.github.com/'
          scope: ${{ env.USERNAME }}
      - name: Install dependencies
        run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{ env.EVEBLE_TYPES_AUTH_TOKEN }}
      - name: ðŸ“¦ã€€Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        with:
          semantic_version: 19.0.5
          dry_run: false
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

          # GIT_AUTHOR_NAME: ${{ env.BOT_NAME }}[bot]
          # GIT_AUTHOR_EMAIL: ${{ env.BOT_NAME }}[bot]@users.noreply.github.com
          # GIT_COMMITTER_NAME: ${{ env.BOT_NAME }}[bot]
          # GIT_COMMITTER_EMAIL: ${{ env.BOT_NAME }}[bot]@users.noreply.github.com

      # - name: Release with Semantic-Release
      #   uses: cycjimmy/semantic-release-action@v3
      #   id: semantic
      #   env:
      #     GH: ${{ secrets.GITHUB_TOKEN }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     SEMANTIC_RELEASE_PACKAGE: '@${{ github.repository }}'
      #   with:
      #     semantic_version: 17.4.7
      #     dry_run: false
      #     extra_plugins: |
      #       @semantic-release/changelog@5.0.1
      #       @semantic-release/exec@5.0.0
      #       @semantic-release/git@9.0.1
      #       @semantic-release/github@8.0.7
      # - name: Output release
      #   if: steps.semantic.outputs.new_release_published == 'true'
      #   run: |
      #     echo ${{ steps.semantic.outputs.new_release_version }}
      #     echo @${{ env.USERNAME }}
      - name: Setup Node with GitHub Package Registry
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          registry-url: 'https://npm.pkg.github.com'
          scope: ${{ env.USERNAME }}
      - name: Publish To GitHub Package Registry
        if: steps.semantic.outputs.new_release_published == 'true'
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ env.GITHUB_TOKEN }}
  # test:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [18.x]
  #   services:
  #     mongodb:
  #       image: mongo:4.2
  #       ports:
  #         - 27017:27017
  #       env:
  #         MONGO_INITDB_ROOT_USERNAME: root
  #         MONGO_INITDB_ROOT_PASSWORD: password
  #   name: Tests / Node@${{ matrix.node-version}} / Run tests
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         registry-url: 'https://npm.pkg.github.com/'
  #         scope: ${{ env.USERNAME }}
  #     - name: Install dependencies
  #       run: yarn install
  #       env:
  #         NODE_AUTH_TOKEN: ${{ env.EVEBLE_TYPES_AUTH_TOKEN }}
  #     - run: yarn test
  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup Node@18.x
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #         registry-url: 'https://npm.pkg.github.com/'
  #         scope: ${{ env.USERNAME }}
  #     - name: Install dependencies
  #       run: yarn install
  #       env:
  #         NODE_AUTH_TOKEN: ${{ env.EVEBLE_TYPES_AUTH_TOKEN }}
  #     - run: yarn build
