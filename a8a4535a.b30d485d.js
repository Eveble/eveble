(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{352:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return c}));var a=n(2),r=n(9),b=(n(0),n(465)),p={id:"definablemixin",title:"DefinableMixin",sidebar_label:"DefinableMixin"},i={id:"api/classes/definablemixin",title:"DefinableMixin",description:"Hierarchy",source:"@site/docs/api/classes/definablemixin.md",permalink:"/eveble/docs/api/classes/definablemixin",sidebar_label:"DefinableMixin",sidebar:"api",previous:{title:"DeclineTask",permalink:"/eveble/docs/api/classes/declinetask"},next:{title:"DetailedLogFormatter",permalink:"/eveble/docs/api/classes/detailedlogformatter"}},l=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Implements",id:"implements",children:[]},{value:"Index",id:"index",children:[{value:"Methods",id:"methods",children:[]}]},{value:"Methods",id:"methods-1",children:[{value:"equals",id:"equals",children:[]},{value:"getPropTypes",id:"getproptypes",children:[]},{value:"getPropertyInitializers",id:"getpropertyinitializers",children:[]},{value:"toPlainObject",id:"toplainobject",children:[]},{value:"validateProps",id:"validateprops",children:[]},{value:"<code>Static</code> getPropTypes",id:"static-getproptypes",children:[]},{value:"<code>Static</code> getPropertyInitializers",id:"static-getpropertyinitializers",children:[]}]}],s={rightToc:l};function c(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"DefinableMixin"))),Object(b.b)("h2",{id:"implements"},"Implements"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/eveble/docs/api/interfaces/types.definable"}),"Definable")),Object(b.b)("li",{parentName:"ul"},"Definable")),Object(b.b)("h2",{id:"index"},"Index"),Object(b.b)("h3",{id:"methods"},"Methods"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/eveble/docs/api/classes/definablemixin#equals"}),"equals")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/eveble/docs/api/classes/definablemixin#getproptypes"}),"getPropTypes")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/eveble/docs/api/classes/definablemixin#getpropertyinitializers"}),"getPropertyInitializers")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/eveble/docs/api/classes/definablemixin#toplainobject"}),"toPlainObject")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/eveble/docs/api/classes/definablemixin#validateprops"}),"validateProps")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/eveble/docs/api/classes/definablemixin#static-getproptypes"}),"getPropTypes")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/eveble/docs/api/classes/definablemixin#static-getpropertyinitializers"}),"getPropertyInitializers"))),Object(b.b)("h2",{id:"methods-1"},"Methods"),Object(b.b)("h3",{id:"equals"},"equals"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"equals"),"(",Object(b.b)("inlineCode",{parentName:"p"},"other"),": any): ",Object(b.b)("em",{parentName:"p"},"boolean")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.definable"}),"Definable"))),Object(b.b)("p",null,"Evaluates if value and value's type of passed other instance are equal to current one."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"class Person extends DefinableMixin {\n  firstName: string;\n  lastName: string;\n  age: number;\n\n  constructor(firstName: string, lastName: string, age: number) {\n    super();\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.age = age;\n  }\n}\nconst firstPerson = new Person('Jane', 'Doe', 28);\nconst secondPerson = new Person('Jane', 'Doe', 28);\nexpect(firstPerson.equals(secondPerson)).to.be.true;\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"const firstPerson = new Person('Jane', 'Doe', 28);\nconst secondPerson = new Person('John', 'Doe', 30);\nexpect(firstPerson.equals(secondPerson)).to.be.false;\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"const firstPerson = new Person('Jane', 'Doe', 28);\nconst secondPerson = {firstName: 'John', lastName: 'Doe', age: 30);\nexpect(firstPerson.equals(secondPerson)).to.be.false;\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"other")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"any"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Other instance of DefinableMixin.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"boolean")),Object(b.b)("p",null,"Returns ",Object(b.b)("inlineCode",{parentName:"p"},"true")," if other instance of DefinableMixin is equal, else ",Object(b.b)("inlineCode",{parentName:"p"},"false"),"."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"getproptypes"},"getPropTypes"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"getPropTypes"),"(): ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#props"}),"Props"))),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.definable"}),"Definable"))),Object(b.b)("p",null,"Returns class properties types from whole inheritance tree."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"@define()\nclass MyClass extends DefinableMixin {\n  stringKey: string\n\n  constructor(props: Record<keyof any, any>) {\n    super()\n    Object.assign(this, props);\n  }\n}\n\nexpect(new MyClass({stringKey: 'my-string'}).getPropTypes()).to.be.eql({\n  stringKey: PropTypes.instanceOf(String)\n})\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#props"}),"Props"))),Object(b.b)("p",null,"Plain object representation of properties types."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"getpropertyinitializers"},"getPropertyInitializers"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"getPropertyInitializers"),"(): ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#props"}),"Props"))),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.definable"}),"Definable"))),Object(b.b)("p",null,"Returns default values metadata from property initializers conversion for whole\ninheritance tree."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"@define()\nclass MyClass extends Struct {\n  stringKey = 'my-string';\n\n  numberKey = 1337;\n\n  constructor(props: Partial<MyClass>) {\n    super();\n    Object.assign(this, this.processProps(props));\n  }\n}\n\nexpect(new MyClass().getPropertyInitializers()).to.be.eql({\n  stringKey: 'my-string',\n  numberKey: 1337\n})\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#props"}),"Props"))),Object(b.b)("p",null,"Default values for properties."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"toplainobject"},"toPlainObject"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"toPlainObject"),"(): ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#props"}),"Props"))),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/eveble/docs/api/interfaces/types.definable"}),"Definable"))),Object(b.b)("p",null,"Converts properties to plain object."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"remarks")),"\n",Object(b.b)("strong",{parentName:"p"},"Loosing object references is required")," since in scenarios when properties resolved\nfrom ",Object(b.b)("inlineCode",{parentName:"p"},"toPlainObject")," are transformed - in such changes to the modified plain object\nwill cascade to original instance(",Object(b.b)("strong",{parentName:"p"},"THIS")," instance, since properties are ",Object(b.b)("strong",{parentName:"p"},"referenced"),")."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"@define()\nclass Point extends DefinableMixin {\n  x: number;\n  y: number;\n  z: number;\n}\n\nconst point = new Point({x: 1, y: 2, z: 3})\nexpect(point.toPlainObject()).to.be.eql({x: 1, y: 2, z: 3});\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#props"}),"Props"))),Object(b.b)("p",null,"Public properties with assigned values as plain object."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"validateprops"},"validateProps"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"validateProps"),"(",Object(b.b)("inlineCode",{parentName:"p"},"props"),": Record\u2039string | number | symbol, any\u203a | undefined, ",Object(b.b)("inlineCode",{parentName:"p"},"propTypes"),": ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"/eveble/docs/api/modules/types#proptypes"}),"PropTypes"),", ",Object(b.b)("inlineCode",{parentName:"p"},"isStrict?"),": boolean): ",Object(b.b)("em",{parentName:"p"},"boolean")),Object(b.b)("p",null,"Validates if provided properties matches prop types."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"throws"))," {ValidationError}\nThrown if the passed properties do not match prop types."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"remarks")),"\nDisabling of runtime validation is possible via Kernel's configuration(and by\nthat env flags also) or by annotating class with ",Object(b.b)("inlineCode",{parentName:"p"},"@validable(false)"),"."),Object(b.b)("p",null,"This is useful when there is external layer(like transportation) that does all\nthe heavy lifting of validation and there are no other sources of incoming data beside\npoints that is handled by layer."),Object(b.b)("p",null,"Use env ",Object(b.b)("inlineCode",{parentName:"p"},"EVEBLE_VALIDATION_TYPE")," set to ",Object(b.b)("inlineCode",{parentName:"p"},"manual")," to disable validation on\ninitialization. You ca re-enable it again on your application configuration via\npath ",Object(b.b)("inlineCode",{parentName:"p"},"validation.type")," set to ",Object(b.b)("inlineCode",{parentName:"p"},"runtime")," before staring application."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"@define()\nclass MyClass extends DefinableMixin {\n  stringKey: string\n\n  constructor(props: Record<keyof any, any>) {\n    super()\n    Object.assign(this, props);\n  }\n}\n\nconst instance = new MyClass({stringKey: 'my-string'});\nexpect(\n  () => instance.validateProps({stringKey: 1337}, this.getPropTypes())\n).to.throw(ValidationError)\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"props")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Record\u2039string ","|"," number ","|"," symbol, any\u203a ","|"," undefined"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Properties to validate.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"propTypes")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/eveble/docs/api/modules/types#proptypes"}),"PropTypes")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Properties types.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"isStrict?")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Flag indicating that validation should be done in strict mode.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"boolean")),Object(b.b)("p",null,"Returns ",Object(b.b)("inlineCode",{parentName:"p"},"true")," if properties are valid, else throws."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"static-getproptypes"},Object(b.b)("inlineCode",{parentName:"h3"},"Static")," getPropTypes"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"getPropTypes"),"(): ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#props"}),"Props"))),Object(b.b)("p",null,"Returns class properties types from whole inheritance tree."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"@define()\nclass MyClass extends DefinableMixin {\n  stringKey: string\n\n  constructor(props: Record<keyof any, any>) {\n    super()\n    Object.assign(this, props);\n  }\n}\n\nexpect(MyClass.getPropTypes()).to.be.eql({\n  stringKey: PropTypes.instanceOf(String)\n})\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#props"}),"Props"))),Object(b.b)("p",null,"Plain object representation of properties types."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"static-getpropertyinitializers"},Object(b.b)("inlineCode",{parentName:"h3"},"Static")," getPropertyInitializers"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"getPropertyInitializers"),"(): ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#props"}),"Props"))),Object(b.b)("p",null,"Returns class property initializers for whole inheritance tree."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"@define()\nclass MyClass extends Struct {\n  stringKey = 'my-string';\n\n  numberKey = 1337;\n\n  constructor(props: Partial<MyClass>) {\n    super();\n    Object.assign(this, this.processProps(props));\n  }\n}\n\nexpect(MyClass.getPropertyInitializers()).to.be.eql({\n  stringKey: 'my-string',\n  numberKey: 1337\n})\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/eveble/docs/api/modules/types#props"}),"Props"))),Object(b.b)("p",null,"Plain object representation of property initializers."))}c.isMDXComponent=!0},465:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return j}));var a=n(0),r=n.n(a);function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},b=Object.keys(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),c=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},o=function(e){var t=c(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,b=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),o=c(n),O=a,j=o["".concat(p,".").concat(O)]||o[O]||m[O]||b;return n?r.a.createElement(j,i(i({ref:t},s),{},{components:n})):r.a.createElement(j,i({ref:t},s))}));function j(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var b=n.length,p=new Array(b);p[0]=O;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var s=2;s<b;s++)p[s]=n[s];return r.a.createElement.apply(null,p)}return r.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"}}]);